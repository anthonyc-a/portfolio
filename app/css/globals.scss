@tailwind base;
@tailwind components;
@tailwind utilities;

@import "./typography/index.scss";
@import "./animations/index.scss";

* {
}

:root {
  --webkit-font-smoothing: antialiased;
  --moz-osx-font-smoothing: grayscale;
  font-family: "BrittiSansVariable", Arial, Helvetica, sans-serif;
}

.cursor-none {
  &:hover {
    cursor: none !important;
  }
}

::-moz-selection {
  color: #f8f8f8;
  background: #1a1a1a;
}

::selection {
  color: #f8f8f8;
  background: #1a1a1a;
}

html {
  height: fit-content;
}

.slick-dots {
  justify-content: flex-start !important;
  padding: 0 1rem !important;
}

.ant-carousel {
  height: 100% !important;
}

.gradient-line {
  width: 100%;
  height: 1px; /* Adjust the height of the line */
  background: linear-gradient(to right, transparent, #999, transparent);
}

strong {
  font-weight: 400;
}

body {
  position: relative;
  color: #1a1a1a;
  height: 200vh;
  background-color: #f8f8f8;
  overflow-x: hidden;
}

button {
  font-size: 0.7rem;
  font-weight: 400;
  text-transform: uppercase;
}

footer {
  position: relative;
  &::before {
    content: "";
    position: absolute;
    top: -14px;
    background-color: #f8f8f8;
    left: 0;
    width: 100%;
    height: 24px;
    border-radius: 10px;
    z-index: 10;
  }
}

.cursor {
  position: fixed;
  display: flex;
  justify-content: center;
  align-items: center;
  top: 0;
  left: 0;
  transition: height 0.25s ease, width 0.25s ease, opacity 0.25s ease;
  backdrop-filter: blur(2px);
  border-radius: 100%;
  pointer-events: none;
  transform-origin: center;
  opacity: 0;
  z-index: 99999;


  .inner {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: #999999a1;
    width: 25px;
    height: 25px;
    border-radius: 100%;
  }

  .expand {
    width: 40px !important;
    height: 40px !important;
    transition: 0.25s ease-out;
  }


  @media (pointer: coarse) {
    display: none;
  }
}

.img-cursor {
  position: absolute;
  display: flex;
  justify-content: center;
  align-items: center;
  top: 0;
  left: 0;
  pointer-events: none;
  transform-origin: center;
  opacity: 0;
  transition: opacity 0.25s ease;
  z-index: 99999;

  @media (pointer: coarse) {
    display: none;
  }
}

.logo {
  font-weight: 300;
  letter-spacing: -0.2px;

  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: -1px;
    width: 120%;
    height: 100%;
    background-color: #1a1a1a;
    animation: rise 1s 0s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
    z-index: 10;
  }
}

.load-delay {
  animation-delay: 0.5s;
}

.appear {
  opacity: 0;
  animation: appear 1.35s 1.1s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
}

.delay {
  animation-delay: 1.6s;
}

@keyframes appear {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.hero {
  height: 100dvh;

  @media (min-width: 768px) {
    height: 100vh;
  }
}

.project:hover .expand {
  opacity: 1;
}

.active {
  filter: brightness(0.65);
}

.divide {
  width: 100%;
  height: 1px;
  background-color: #999;
  transition: 1s ease-in-out;
}

.ttn {
  text-transform: none;
  font-weight: 400;
}

.main-btn {
  transition: 0.25s ease-in-out;
  overflow: hidden;

  .arrow {
  transition: 0.25s ease-in-out;

  }

  &:hover {
    .inner {
      animation: dart 0.65s ease-in-out forwards;
    }
  }

  @keyframes dart {
    0% {
      transform: translate(0%, 0%);
      opacity: 1;
    }
    25% {
      opacity: 0.0;
      transform: translate(0%, 100%);
    }
    50% {
      transform: translate(0%, -100%);
      opacity: 0;
    }
    75% {
      opacity: 1;
      transform: translate(0%, 0%);
    }
    100% {
      transform: translate(0%, 0%);
    }
    
  }


  span {
    mix-blend-mode: difference;
    color: #1a1a1a;
    z-index: 10;
  }

  &:hover {
    border-color: #333;
  }

  &::after {
    content: "";
    position: absolute;
    display: none;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #1a1a1a;
    transform: translateY(100%);
    transition: 0.35s ease-in-out;
    z-index: -1;
  }

  &:hover::after {
    transform: translateY(0);
  }
}

.dark-btn {
  &:hover {
    .arrow {
      filter: invert(0);
    }
  }
}
